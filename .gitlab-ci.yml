# Copyright (C) 2021  Christian Berger
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Which Docker image shall be used on the GitLab runner?
image: registry.git.chalmers.se/courses/dit638/students/docker/docker:19.03.3

# Details about how to connect to the Docker service to run this build.
variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

services:
  - name: registry.git.chalmers.se/courses/dit638/students/docker/docker:19.03.3-dind
    alias: docker
    command: ["--experimental"]

stages:
  - build
  - deploy

# Display information before we start the build.
before_script:
  - docker info
  - apk add --update curl && rm -rf /var/cache/apk/*
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - 'curl --location --output artifacts.zip --header "JOB-TOKEN: $CI_JOB_TOKEN" "https://git.chalmers.se/api/v4/courses/dit638/students/2021-group-04/-/jobs/119673/artifacts"'
  - ls

# This section describes what shall be done to build and test the project.
build-and-test:
  only:
    - branches
  tags:
    - docker-build
  stage: build
  script:
    - docker build -t group4:latest -f Dockerfile .
    - docker create --cidfile "cid.txt" group4:latest
    - docker cp `cat cid.txt`:/opt/report.pdf .
    - docker rm `cat cid.txt`
  artifacts:
        when: always
        expose_as: 'code coverage'
        paths:
          - report.pdf
        expire_in: 2 weeks
        
# This section describes what shall be done to deploy artefacts from the project.
release:
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^v\d+.\d+.\d+$/
  tags:
    - docker-build
  stage: deploy
  before_script:
    - mkdir -p ~/.docker/cli-plugins
    - wget -O  ~/.docker/cli-plugins/docker-buildx https://github.com/docker/buildx/releases/download/v0.5.1/buildx-v0.5.1.linux-amd64
    - chmod 755 ~/.docker/cli-plugins/docker-buildx
    - "echo -e '{\n \"experimental\": \"enabled\"\n}' | tee ~/.docker/config.json"
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create --name platformbuilder --use
    - docker buildx inspect --bootstrap
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CI_REGISTRY}
  script:
    - docker buildx build --platform "linux/amd64,linux/arm/v7" -t "$CI_REGISTRY_IMAGE":"$CI_COMMIT_TAG" --push .
